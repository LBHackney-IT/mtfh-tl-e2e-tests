version: 2.1

parameters:
  run_workflow_ci:
    description: The default behaviour of the pipeline when a commit and/or merge is performed.
    default: true
    type: boolean

  upstream_pipeline_name:
    description: The name of the mfe that triggered the tests upstream.
    default: ""
    type: string

  external_trigger:
    description: Pipeline triggered externally
    default: false
    type: boolean

  development_environment:
    default: false
    type: boolean

  staging_environment:
    default: false
    type: boolean

  production_environment:
    default: false
    type: boolean

  continuation_key:
    default: ""
    type: string
    
orbs:
  cypress: cypress-io/cypress@1
browsers-chrome78-ff70:
    docker:
      - image: cypress/browsers:node12.13.0-chrome78-ff70

jobs:
  trigger-message-on-failure:
        docker:
          - image: cimg/base:2021.05
        steps:
          - when:
              condition: on_fail
              steps:
                - run: |
                        curl --location --request POST 'https://circleci.com/api/v2/pipeline/continue' \
                        --header 'Circle-Token: '"$CIRCLE_TOKEN"'' \
                        --header 'content-type: application/json' \
                        --data '{ "continuation-key": "<< pipeline.parameters.continuation_key >>", "configuration": "string", "parameters": { "run_development_workflow":false, '\""failing_e2e_tests"\"': true } }'

  trigger-downstream-deployment:
        docker:
          - image: cimg/base:2021.05
        steps:
          - when:
              condition: << pipeline.parameters.external_trigger >> 
              steps:
                - run: |
                        case << pipeline.parameters.development_environment >> in
                        (true) export DEPLOYMENT_ENVIRONMENT='run_staging_workflow' ;;
                        esac
                        case << pipeline.parameters.staging_environment >> in
                        (true) export DEPLOYMENT_ENVIRONMENT='run_production_workflow' ;;
                        esac
                        curl --location --request POST 'https://circleci.com/api/v2/project/gh/LBHackney-IT/mtfh-frontend-<< pipeline.parameters.upstream_pipeline_name >>/pipeline' \
                        --header 'Circle-Token: '"$CIRCLE_TOKEN"'' \
                        --header 'Content-Type: application/json' \
                        --data ' { "branch": "MTTL-856-configure-e2e-pipeline-trigger", "parameters": { "run_development_workflow": false, '\""$DEPLOYMENT_ENVIRONMENT"\"': true } }' ;

workflows:
  run-ci-tests:
    when: << pipeline.parameters.run_workflow_ci >>
    jobs:
      - cypress/run:
          name: ci
          command: export CYPRESS_ENVIRONMENT="development" ;
             echo "Running against $CYPRESS_ENVIRONMENT environment" ;
             npm run test:cypress:run
          store_artifacts: true

  e2e-tests-development:
    when:
      and:
        - equal: [ << pipeline.parameters.external_trigger >> ]
        - or: [ << pipeline.parameters.development_environment >> ]
    jobs:
      # - cypress/run:
      #     name: run-development-e2e
      #     command: export CYPRESS_ENVIRONMENT="development" ;
      #        echo "Running against $CYPRESS_ENVIRONMENT environment" ;
      #        npm run test:cypress:run
      # - trigger-downstream-deployment:
      #     name: deploy to staging
          # requires: 
          #   - run-development-e2e
      - trigger-message-on-failure:
          name: trigger failure message
          # requires:
          #   - trigger-downstream-deployment
      

  e2e-tests-staging:
    when:
      and:
        - equal: [ << pipeline.parameters.external_trigger >> ]
        - or: [ << pipeline.parameters.staging_environment >> ]
    jobs:
      # - cypress/run:
      #     name: run-staging-e2e
      #     command: export CYPRESS_ENVIRONMENT="staging" ;
      #        echo "Running against $CYPRESS_ENVIRONMENT environment" ;
      #        npm run test:cypress:run
      - trigger-downstream-deployment:
          name: deploy to production
          # requires: 
          #   - run-staging-e2e
      - trigger-message-on-failure:
          name: trigger failure message
          requires:
            - trigger-downstream-deployment
      
  e2e-tests-production:
    when:
      and:
        - equal: [ << pipeline.parameters.external_trigger >> ]
        - or: [ << pipeline.parameters.production_environment >> ]
    jobs:
      - cypress/run:
          name: run-production-e2e
          command: export CYPRESS_ENVIRONMENT="producton" ;
             echo "Running against $CYPRESS_ENVIRONMENT environment" ;
             npm run test:cypress:run
      - trigger-message-on-failure:
          name: trigger failure message
          requires:
            - trigger-downstream-deployment

  run-cypress-nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master             
    jobs:
      - cypress/run:
          name: chrome
          executor: cypress/browsers-chrome78-ff70
          command: npm run test:cypress:nightly:chrome
          store_artifacts: true
      - cypress/run:
          name: electron
          executor: cypress/browsers-chrome78-ff70
          command: npm run test:cypress:nightly:electron
          store_artifacts: true
      - cypress/run:
           name: firefox
           executor: cypress/browsers-chrome78-ff70
           command: npm run test:cypress:nightly:firefox
           store_artifacts: true