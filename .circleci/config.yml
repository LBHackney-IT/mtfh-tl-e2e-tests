version: 2.1

parameters:
  run_workflow_ci:
    description: The default behaviour of the pipeline when a commit and/or merge is performed.
    default: true
    type: boolean

  upstream_pipeline_name:
    description: The name of the mfe that triggered the tests upstream.
    default: ""
    type: string

  external_trigger:
    description: Pipeline triggered externally
    default: false
    type: boolean

  development_environment:
    default: false
    type: boolean

  staging_environment:
    default: false
    type: boolean

  production_environment:
    default: false
    type: boolean
  
  api_tests:
    default: false
    type: boolean
    
orbs:
  cypress: cypress-io/cypress@1
  browsers-chrome78-ff70:
    docker:
      - image: cypress/browsers:node14.16.0-chrome89-ff86

jobs:
  run-e2e-tests:
        docker:
          - image: cypress/browsers:node14.16.0-chrome89-ff86
            environment:
              TERM: xterm
        steps:
          - when:
              condition: << pipeline.parameters.external_trigger >> 
              steps:
                - checkout
                - run:
                    name: Execute e2e tests
                    command: |
                              case << pipeline.parameters.development_environment >> in
                              (true) export CYPRESS_ENVIRONMENT='development' ;;
                              esac
                              case << pipeline.parameters.staging_environment >> in
                              (true) export CYPRESS_ENVIRONMENT='staging' ;;
                              esac
                              case << pipeline.parameters.production_environment >> in
                              (true) export CYPRESS_ENVIRONMENT='production' ;;
                              esac
                              echo "Running against $CYPRESS_ENVIRONMENT environment" ;
                              npm install ;
                              npm run test:cypress:$CYPRESS_ENVIRONMENT
                - run: 
                    name: trigger downstream deployment
                    command: |
                              upstreamPipeline="$(echo << pipeline.parameters.upstream_pipeline_name >> | sed 's,://github.com/,,g')"
                              case << pipeline.parameters.development_environment >> in
                              (true) export DEPLOYMENT_ENVIRONMENT='run_staging_workflow' ;;
                              esac
                              case << pipeline.parameters.staging_environment >> in
                              (true) export DEPLOYMENT_ENVIRONMENT='run_production_workflow' ;;
                              esac
                              curl --location --request POST 'https://circleci.com/api/v2/project/gh/$upstreamPipeline/pipeline' \
                              --header 'Circle-Token: '"$CIRCLE_TOKEN"'' \
                              --header 'Content-Type: application/json' \
                              --data '{ "branch": "main", "parameters": { "run_development_workflow": false, '\""$DEPLOYMENT_ENVIRONMENT"\"': true } }' ;
                    when: on_success
                - run:
                    name: trigger failure message to parent pipeline
                    command: |
                              upstreamPipeline="$(echo << pipeline.parameters.upstream_pipeline_name >> | sed 's,://github.com/,,g')"
                              curl --location --request POST 'https://circleci.com/api/v2/project/gh/$upstreamPipeline/pipeline' \
                              --header 'Circle-Token: '"$CIRCLE_TOKEN"'' \
                              --header 'Content-Type: application/json' \
                              --data '{ "branch": "main", "parameters": { "run_development_workflow": false, "e2e_test_failure": true } }' ;
                    when: on_fail

workflows:
  run-ci-tests:
    when: << pipeline.parameters.run_workflow_ci >>
    jobs:
      - cypress/run:
          name: ci
          command: export CYPRESS_ENVIRONMENT="development" ;
             echo "Running against $CYPRESS_ENVIRONMENT environment" ;
             echo << pipeline.project.git_url >>
             npm run test:cypress:run
          store_artifacts: false

  e2e-tests-development:
    when:
      and:
        - equal: [ << pipeline.parameters.external_trigger >> ]
        - and: [ << pipeline.parameters.development_environment >> ]
    jobs:
      - run-e2e-tests
          
  e2e-tests-staging:
    when:
      and:
        - equal: [ << pipeline.parameters.external_trigger >> ]
        - and: [ << pipeline.parameters.staging_environment >> ]
    jobs:
      - run-e2e-tests
      
  e2e-tests-production:
    when:
      and:
        - equal: [ << pipeline.parameters.external_trigger >> ]
        - and: [ << pipeline.parameters.production_environment >> ]
    jobs:
      - run-e2e-tests

  api-tests-development:
    when: << pipeline.parameters.api_tests >>
    jobs:
      - cypress/run:
          name: API tests
          command: export CYPRESS_ENVIRONMENT="development" ;
             echo "Running against $CYPRESS_ENVIRONMENT environment" ;
             npm run test:cypress:api

  run-cypress-nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master             
    jobs:
      - cypress/run:
          name: staging-nightly
          executor: cypress/browsers-chrome78-ff70
          command: |
                    export CYPRESS_ENVIRONMENT='staging';
                    npm run test:cypress:nightly:chrome
          store_artifacts: false

  run-cypress-weekly:
    triggers:
      - schedule:
          cron: "0 0 * * 3"
          filters:
            branches:
              only:
                - master
    jobs:
      - cypress/run:
          name: electron
          executor: cypress/browsers-chrome78-ff70
          command: |
                    export CYPRESS_ENVIRONMENT='staging';
                    npm run test:cypress:nightly:electron
          store_artifacts: false
      - cypress/run:
           name: firefox
           executor: cypress/browsers-chrome78-ff70
           command: |
                     export CYPRESS_ENVIRONMENT='staging';
                     npm run test:cypress:nightly:firefox
           store_artifacts: false